name: "Cross Platform Tests"

on:
    workflow_dispatch:

jobs:
  ubuntu-x64:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install CMake
      uses: lukka/get-cmake@latest 
    - name: Configure CMake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DSYNC_LIB_DOCTEST_ADD_CTESTS=OFF
    - name: Build
      run: cmake --build build --config Debug --parallel
    - name: Executable Permissions
      run: chmod +x ./build/SyncLibTests
    - name: List Build Dir
      run: ls build
    - name: Test
      run: ./build/SyncLibTests
  ubuntu-arm:
    runs-on: ubuntu-24.04-arm
    steps:
    - uses: actions/checkout@v4
    - name: Install CMake
      uses: lukka/get-cmake@latest 
    - name: Configure CMake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DSYNC_LIB_DOCTEST_ADD_CTESTS=OFF
    - name: Build
      run: cmake --build build --config Debug --parallel
    - name: Executable Permissions
      run: chmod +x ./build/SyncLibTests
    - name: Test
      run: ./build/SyncLibTests
  windows-x64:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install CMake
      uses: lukka/get-cmake@latest 
    - name: Configure CMake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DSYNC_LIB_DOCTEST_ADD_CTESTS=OFF -DSYNC_LIB_ASAN=OFF
    - name: Build
      run: cmake --build build --config Debug --parallel
    - name: Test
      run: ./build/Debug/SyncLibTests
  windows-11-arm:
    runs-on: windows-11-arm
    steps:
    - uses: actions/checkout@v4
    - name: Install CMake
      uses: lukka/get-cmake@latest 
    - name: Configure CMake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DSYNC_LIB_DOCTEST_ADD_CTESTS=OFF
    - name: Build
      run: cmake --build build --config Debug --parallel
    - name: Test
      run: ./build/Debug/SyncLibTests
  mac-arm:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install CMake
      uses: lukka/get-cmake@latest 
    - name: Configure CMake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DSYNC_LIB_DOCTEST_ADD_CTESTS=OFF
    - name: Build
      run: cmake --build build --config Debug --parallel
    - name: Test
      run: ./build/SyncLibTests
  macos-15-intel:
    # https://github.com/actions/runner-images/issues/13045
    # Until August 2027
    runs-on: macos-15-intel
    steps:
    - uses: actions/checkout@v4
    - name: Install CMake
      uses: lukka/get-cmake@latest 
    - name: Configure CMake
      run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DSYNC_LIB_DOCTEST_ADD_CTESTS=OFF
    - name: Build
      run: cmake --build build --config Debug --parallel
    - name: Test
      run: ./build/SyncLibTests
  emscripten:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - name: Install CMake
      uses: lukka/get-cmake@latest
    - name: Install Emscripten and Configure CMake
      run: |
        git clone https://github.com/emscripten-core/emsdk.git
        cd emsdk
        ./emsdk install latest
        ./emsdk activate latest
        source ./emsdk_env.sh
        cd ..
        emcmake cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DSYNC_LIB_DOCTEST_ADD_CTESTS=OFF -DSYNC_LIB_ASAN=OFF
    - name: Build
      run: cmake --build build --config Debug --parallel
    - name: Test
      run: node ./build/SyncLibTests.js
  riscv:
    name: ubuntu-24.04-riscv
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: uraimo/run-on-arch-action@v3
        with:
          arch: riscv64
          distro: ubuntu24.04
          githubToken: ${{ github.token }} # Save workflow caches
          dockerRunArgs: |
            --volume "${PWD}:/opt/sync_rv"
          install: |
            echo INSTALL
            apt-get update
            apt-get install -y sudo
            sudo apt-get update
            sudo apt-get install -y cmake build-essential
          run: |
            cmake --version
            cd /opt/sync_rv
            cmake -S . -B build -DCMAKE_BUILD_TYPE=Debug -DSYNC_LIB_DOCTEST_ADD_CTESTS=OFF
            cmake --build build --config Debug --parallel
            ./build/SyncLibTests
